[
    {
        "id": 0,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \" Beijing\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \" Shanghai\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": " Beijing",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": " Shanghai",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match:  Beijing, ideal-opt: ['Beijing, China']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"\u5317\u4eac,China\",\"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"\u4e0a\u6d77,China\",\"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "\u5317\u4eac,China",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "\u4e0a\u6d77,China",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: \u5317\u4eac,China, ideal-opt: ['Beijing, China']"
        },
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Beijing, China"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Shanghai, China"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 1,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston, MA\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco, CA\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: San Francisco, ideal-opt: ['San Francisco, CA']"
        },
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 2,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: Boston, ideal-opt: ['Boston, MA']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco, CA\", \"unit\": \"fahrenheit\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "fahrenheit"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 3,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Canc\\u nz, QR\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Playa del Carmen, QR\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Tulum, QR\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Playa del Carmen, QR",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Tulum, QR",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: Playa del Carmen, QR, ideal-opt: ['Canc\u00fan, QR', 'Canc\\\\u00fan, QR']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Cancun, QR\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Playa del Carmen, QR\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Tulum, QR\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Cancun, QR",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Playa del Carmen, QR",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Tulum, QR",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Canc\u00fan, QR",
                        "Canc\\u00fan, QR"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Playa del Carmen, QR"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Tulum, QR"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 4,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston, USA\", \"url\": \"https://api.open-meteo.com/v1/forecast\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco, USA\", \"url\": \"https://api.open-meteo.com/v1/forecast\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, USA",
                            "url": "https://api.open-meteo.com/v1/forecast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, USA",
                            "url": "https://api.open-meteo.com/v1/forecast"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, USA\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco, USA\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, USA"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, USA"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, USA"
                    ],
                    "url": [
                        "",
                        "https://api.open-meteo.com/v1/forecast"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, USA"
                    ],
                    "url": [
                        "",
                        "https://api.open-meteo.com/v1/forecast"
                    ]
                }
            }
        ]
    },
    {
        "id": 5,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston, MA\", \"url\": \"https://api.open-meteo.com/v1/forecast\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco, CA\", \"url\": \"https://api.open-meteo.com/v1/forecast\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "url": "https://api.open-meteo.com/v1/forecast",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "url": "https://api.open-meteo.com/v1/forecast",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: celsius, ideal-opt: ['', 'fahrenheit']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco, CA\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: celsius, ideal-opt: ['', 'fahrenheit']"
        },
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ],
                    "url": [
                        "",
                        "https://api.open-meteo.com/v1/forecast"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ],
                    "url": [
                        "",
                        "https://api.open-meteo.com/v1/forecast"
                    ]
                }
            }
        ]
    },
    {
        "id": 6,
        "no_stag": {
            "output": "{\"name\": \"get_snow_report\", \"parameters\": {\"location\": \"Paris, France\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_snow_report",
                        "arguments": {
                            "location": "Paris, France",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "use_stag": {
            "output": "{\"name\": \"get_snow_report\", \"parameters\":{\"location\": \"Paris, France\"}}; {\"name\": \"get_snow_report\", \"parameters\":{\"location\": \"Bordeaux, France\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_snow_report",
                        "arguments": {
                            "location": "Paris, France"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_snow_report",
                        "arguments": {
                            "location": "Bordeaux, France"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "expected": [
            {
                "name": "get_snow_report",
                "arguments": {
                    "location": [
                        "Paris, France"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_snow_report",
                "arguments": {
                    "location": [
                        "Bordeaux, France"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 7,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston, MA\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco, CA\", \"unit\": \"fahrenheit\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "fahrenheit"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco, CA\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: celsius, ideal-opt: ['', 'fahrenheit']"
        },
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 8,
        "no_stag": {
            "output": "{\"name\": \"todo\", \"parameters\": {\"type\": \"add\", \"content\": \"Machine Learning Study Session\"}}",
            "call": [
                {
                    "function": {
                        "name": "todo",
                        "arguments": {
                            "type": "add",
                            "content": "Machine Learning Study Session"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "use_stag": {
            "output": "{\"name\": \"todo\", \"parameters\":{\"type\": \"add\", \"content\": \"Machine Learning Study Session\"}}; {\"name\": \"todo\", \"parameters\":{\"type\": \"delete\", \"content\": \"todo random\"}}",
            "call": [
                {
                    "function": {
                        "name": "todo",
                        "arguments": {
                            "type": "add",
                            "content": "Machine Learning Study Session"
                        }
                    }
                },
                {
                    "function": {
                        "name": "todo",
                        "arguments": {
                            "type": "delete",
                            "content": "todo random"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "expected": [
            {
                "name": "todo",
                "arguments": {
                    "type": [
                        "add"
                    ],
                    "content": [
                        "Machine Learning Study Session"
                    ]
                }
            },
            {
                "name": "todo",
                "arguments": {
                    "type": [
                        "delete"
                    ],
                    "content": [
                        "todo random"
                    ]
                }
            }
        ]
    },
    {
        "id": 9,
        "no_stag": {
            "output": "{\"name\": \"get_aws_pricing\", \"parameters\": {\"memory\": \"2\", \"cpu\": \"single\", \"region\": \"us-east-1\"}}; {\"name\": \"get_aws_pricing\", \"parameters\": {\"memory\": \"4\", \"cpu\": \"single\", \"region\": \"us-east-1\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_aws_pricing",
                        "arguments": {
                            "memory": "2",
                            "cpu": "single",
                            "region": "us-east-1"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_aws_pricing",
                        "arguments": {
                            "memory": "4",
                            "cpu": "single",
                            "region": "us-east-1"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "TYPE_ERROR",
            "err_msg": "wrong type 2: not int"
        },
        "use_stag": {
            "output": "{\"name\": \"get_aws_pricing\", \"parameters\":{\"memory\": 2, \"cpu\": \"single\", \"region\": \"any\"}}; {\"name\": \"get_aws_pricing\", \"parameters\":{\"memory\": 4, \"cpu\": \"single\", \"region\": \"any\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_aws_pricing",
                        "arguments": {
                            "memory": 2,
                            "cpu": "single",
                            "region": "any"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_aws_pricing",
                        "arguments": {
                            "memory": 4,
                            "cpu": "single",
                            "region": "any"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: any, ideal-opt: ['', 'us-east-1']"
        },
        "expected": [
            {
                "name": "get_aws_pricing",
                "arguments": {
                    "memory": [
                        2
                    ],
                    "cpu": [
                        "single"
                    ],
                    "region": [
                        "",
                        "us-east-1"
                    ],
                    "operating_system0": [
                        "",
                        "Linux"
                    ]
                }
            },
            {
                "name": "get_aws_pricing",
                "arguments": {
                    "memory": [
                        4
                    ],
                    "cpu": [
                        "single"
                    ],
                    "region": [
                        "",
                        "us-east-1"
                    ],
                    "operating_system0": [
                        "",
                        "Linux"
                    ]
                }
            }
        ]
    },
    {
        "id": 10,
        "no_stag": {
            "output": "{\"name\": \"hotel_booking_book\", \"parameters\": {\"hotel_name\": \"Sheraton Hotel\", \"location\": \"New York, NY\", \"check_in\": \"2022-05-01\", \"check_out\": \"2022-05-05\", \"adults\": \"2\", \"children\": \"1\"}}; {\"name\": \"hotel_booking_book\", \"parameters\": {\"hotel_name\": \"Marriott\", \"location\": \"Los Angeles, CA\", \"check_in\": \"2022-06-01\", \"check_out\": \"2022-06-10\", \"adults\": \"1\", \"children\": \"2\"}}",
            "call": [
                {
                    "function": {
                        "name": "hotel_booking_book",
                        "arguments": {
                            "hotel_name": "Sheraton Hotel",
                            "location": "New York, NY",
                            "check_in": "2022-05-01",
                            "check_out": "2022-05-05",
                            "adults": "2",
                            "children": "1"
                        }
                    }
                },
                {
                    "function": {
                        "name": "hotel_booking_book",
                        "arguments": {
                            "hotel_name": "Marriott",
                            "location": "Los Angeles, CA",
                            "check_in": "2022-06-01",
                            "check_out": "2022-06-10",
                            "adults": "1",
                            "children": "2"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: Marriott, ideal-opt: ['Sheraton Hotel', 'Sheraton', 'Hotel Sheraton']"
        },
        "use_stag": {
            "output": "{\"name\": \"hotel_booking_book\", \"parameters\":{\"hotel_name\": \"Sheraton Hotel\", \"location\": \"New York\", \"check_in\": \"2022-05-01\", \"check_out\": \"2022-05-05\", \"adults\": 2, \"children\": 1}}; {\"name\": \"hotel_booking_book\", \"parameters\":{\"hotel_name\": \"Marriott\", \"location\": \"Los Angeles\", \"check_in\": \"2022-06-01\", \"check_out\": \"2022-06-10\", \"adults\": 1, \"children\": 2}}",
            "call": [
                {
                    "function": {
                        "name": "hotel_booking_book",
                        "arguments": {
                            "hotel_name": "Sheraton Hotel",
                            "location": "New York",
                            "check_in": "2022-05-01",
                            "check_out": "2022-05-05",
                            "adults": 2,
                            "children": 1
                        }
                    }
                },
                {
                    "function": {
                        "name": "hotel_booking_book",
                        "arguments": {
                            "hotel_name": "Marriott",
                            "location": "Los Angeles",
                            "check_in": "2022-06-01",
                            "check_out": "2022-06-10",
                            "adults": 1,
                            "children": 2
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: New York, ideal-opt: ['New York, NY']"
        },
        "expected": [
            {
                "name": "hotel_booking_book",
                "arguments": {
                    "hotel_name": [
                        "Sheraton Hotel",
                        "Sheraton",
                        "Hotel Sheraton"
                    ],
                    "location": [
                        "New York, NY"
                    ],
                    "check_in": [
                        "2022-05-01"
                    ],
                    "check_out": [
                        "2022-05-05"
                    ],
                    "adults": [
                        2
                    ],
                    "children": [
                        1
                    ]
                }
            },
            {
                "name": "hotel_booking_book",
                "arguments": {
                    "hotel_name": [
                        "Marriott"
                    ],
                    "location": [
                        "Los Angeles, CA"
                    ],
                    "check_in": [
                        "2022-06-01"
                    ],
                    "check_out": [
                        "2022-06-10"
                    ],
                    "adults": [
                        1
                    ],
                    "children": [
                        2
                    ]
                }
            }
        ]
    },
    {
        "id": 11,
        "no_stag": {
            "output": "{\"name\": \"log_food\", \"parameters\": {\"food_name\": \"frozen mango\", \"portion_amount\": \"8\", \"portion_unit\": \"pieces\", \"meal_type\": \"snack\", \"log_date\": \"current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"pepperoni pizza\", \"portion_amount\": \"2\", \"portion_unit\": \"slices\", \"meal_type\": \"breakfast\", \"log_date\": \"current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"chai tea\", \"portion_amount\": \"1\", \"portion_unit\": \"cup\", \"meal_type\": \"snack\", \"log_date\": \"current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"coffee\", \"portion_amount\": \"1\", \"portion_unit\": \"cup\", \"meal_type\": \"breakfast\", \"log_date\": \"current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)\"}}",
            "call": [
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "frozen mango",
                            "portion_amount": "8",
                            "portion_unit": "pieces",
                            "meal_type": "snack",
                            "log_date": "current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "pepperoni pizza",
                            "portion_amount": "2",
                            "portion_unit": "slices",
                            "meal_type": "breakfast",
                            "log_date": "current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "chai tea",
                            "portion_amount": "1",
                            "portion_unit": "cup",
                            "meal_type": "snack",
                            "log_date": "current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "coffee",
                            "portion_amount": "1",
                            "portion_unit": "cup",
                            "meal_type": "breakfast",
                            "log_date": "current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "use_stag": {
            "output": "{\"name\": \"log_food\", \"parameters\":{\"food_name\": \"frozen mango\", \"portion_amount\": 8, \"portion_unit\": \"piece\", \"meal_type\": \"snack\", \"log_date\": \"null\"}}; {\"name\": \"log_food\", \"parameters\":{\"food_name\": \"chai tea\", \"portion_amount\": 1, \"portion_unit\": \"cup\", \"meal_type\": \"snack\", \"log_date\": \"null\"}}; {\"name\": \"log_food\", \"parameters\":{\"food_name\": \"pepperoni pizza\", \"portion_amount\": 2, \"portion_unit\": \"slice\", \"meal_type\": \"breakfast\", \"log_date\": \"null\"}}; {\"name\": \"log_food\", \"parameters\":{\"food_name\": \"coffee\", \"portion_amount\": 1, \"portion_unit\": \"cup\", \"meal_type\": \"breakfast\", \"log_date\": \"null\"}}",
            "call": [
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "frozen mango",
                            "portion_amount": 8,
                            "portion_unit": "piece",
                            "meal_type": "snack",
                            "log_date": "null"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "chai tea",
                            "portion_amount": 1,
                            "portion_unit": "cup",
                            "meal_type": "snack",
                            "log_date": "null"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "pepperoni pizza",
                            "portion_amount": 2,
                            "portion_unit": "slice",
                            "meal_type": "breakfast",
                            "log_date": "null"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "coffee",
                            "portion_amount": 1,
                            "portion_unit": "cup",
                            "meal_type": "breakfast",
                            "log_date": "null"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "expected": [
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "frozen mango"
                    ],
                    "portion_amount": [
                        8.0
                    ],
                    "portion_unit": [
                        "piece"
                    ],
                    "meal_type": [
                        "",
                        "snack"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "chai tea"
                    ],
                    "portion_amount": [
                        1.0
                    ],
                    "portion_unit": [
                        "cup"
                    ],
                    "meal_type": [
                        "",
                        "snack"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "pepperoni pizza"
                    ],
                    "portion_amount": [
                        2.0
                    ],
                    "portion_unit": [
                        "slice"
                    ],
                    "meal_type": [
                        "",
                        "snack"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "coffee"
                    ],
                    "portion_amount": [
                        1.0
                    ],
                    "portion_unit": [
                        "cup"
                    ],
                    "meal_type": [
                        "",
                        "snack"
                    ]
                }
            }
        ]
    },
    {
        "id": 12,
        "no_stag": {
            "output": "{\"name\": \"log_food\", \"parameters\": {\"food_name\": \"iced coffee\", \"portion_amount\": \"12\", \"portion_unit\": \"ounces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"banana\", \"portion_amount\": \"no specific amount provided (assuming 1 unit)\", \"portion_unit\": \"units\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"quesadilla\", \"portion_amount\": \"no specific amount provided (assuming 1 unit)\", \"portion_unit\": \"units\", \"meal_name\": \"lunch\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"asparagus\", \"portion_amount\": \"4\", \"portion_unit\": \"ounces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"eggs\", \"portion_amount\": \"2\", \"portion_unit\": \"units\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"bread\", \"portion_amount\": \"1\", \"portion_unit\": \"pieces\", \"meal_name\": \"breakfast\"}}",
            "call": [
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "iced coffee",
                            "portion_amount": "12",
                            "portion_unit": "ounces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "banana",
                            "portion_amount": "no specific amount provided (assuming 1 unit)",
                            "portion_unit": "units",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "quesadilla",
                            "portion_amount": "no specific amount provided (assuming 1 unit)",
                            "portion_unit": "units",
                            "meal_name": "lunch"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "asparagus",
                            "portion_amount": "4",
                            "portion_unit": "ounces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "eggs",
                            "portion_amount": "2",
                            "portion_unit": "units",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "bread",
                            "portion_amount": "1",
                            "portion_unit": "pieces",
                            "meal_name": "breakfast"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "use_stag": {
            "output": "{\"name\": \"log_food\", \"parameters\":{\"food_name\": \"iced coffee\", \"portion_amount\": 12, \"portion_unit\": \"ounces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\":{\"food_name\": \"banana\", \"portion_amount\": 1, \"portion_unit\": \"pieces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\":{\"food_name\": \"quesadilla\", \"portion_amount\": 1, \"portion_unit\": \"pieces\", \"meal_name\": \"lunch\"}}; {\"name\": \"log_food\", \"parameters\":{ \"food_name\": \"asparagus\", \"portion_amount\": 4, \"portion_unit\": \"ounces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\":{ \"food_name\": \"eggs\", \"portion_amount\": 2, \"portion_unit\": \"pieces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\":{ \"food_name\": \"gluten free bread\", \"portion_amount\": 1, \"portion_unit\": \"pieces\", \"meal_name\": \"breakfast\"}}",
            "call": [
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "iced coffee",
                            "portion_amount": 12,
                            "portion_unit": "ounces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "banana",
                            "portion_amount": 1,
                            "portion_unit": "pieces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "quesadilla",
                            "portion_amount": 1,
                            "portion_unit": "pieces",
                            "meal_name": "lunch"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "asparagus",
                            "portion_amount": 4,
                            "portion_unit": "ounces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "eggs",
                            "portion_amount": 2,
                            "portion_unit": "pieces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "gluten free bread",
                            "portion_amount": 1,
                            "portion_unit": "pieces",
                            "meal_name": "breakfast"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "expected": [
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "iced coffee"
                    ],
                    "portion_amount": [
                        12.0
                    ],
                    "portion_unit": [
                        "ounces"
                    ],
                    "meal_name": [
                        "breakfast"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "banana"
                    ],
                    "portion_amount": [
                        1.0
                    ],
                    "portion_unit": [
                        "pieces"
                    ],
                    "meal_name": [
                        "breakfast"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "quesadilla"
                    ],
                    "portion_amount": [
                        1.0
                    ],
                    "portion_unit": [
                        "pieces"
                    ],
                    "meal_name": [
                        "lunch"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "asparagus"
                    ],
                    "portion_amount": [
                        4.0
                    ],
                    "portion_unit": [
                        "ounces"
                    ],
                    "meal_name": [
                        "breakfast"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "eggs"
                    ],
                    "portion_amount": [
                        2.0
                    ],
                    "portion_unit": [
                        "pieces"
                    ],
                    "meal_name": [
                        "breakfast"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "gluten free bread"
                    ],
                    "portion_amount": [
                        1.0
                    ],
                    "portion_unit": [
                        "pieces"
                    ],
                    "meal_name": [
                        "breakfast"
                    ]
                }
            }
        ]
    },
    {
        "id": 13,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston, MA\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco, CA\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: celsius, ideal-opt: ['', 'fahrenheit']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco, CA\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 14,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: Boston, ideal-opt: ['Boston, MA']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco\", \"unit\": \"fahrenheit\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco",
                            "unit": "fahrenheit"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: Boston, ideal-opt: ['Boston, MA']"
        },
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 15,
        "no_stag": {
            "output": "{\"name\": \"cmd_controller.execute\", \"parameters\": {\"command\": \"dir C:/\", \"unit\": \"N/A\"}}; {\"name\": \"cmd_controller.execute\", \"parameters\": {\"command\": \"type nul > C:/testing.txt\", \"unit\": \"N/A\"}}",
            "call": [
                {
                    "function": {
                        "name": "cmd_controller.execute",
                        "arguments": {
                            "command": "dir C:/",
                            "unit": "N/A"
                        }
                    }
                },
                {
                    "function": {
                        "name": "cmd_controller.execute",
                        "arguments": {
                            "command": "type nul > C:/testing.txt",
                            "unit": "N/A"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: dir C:/, ideal-opt: ['dir c:\\\\', 'dir c:\\\\\\\\']"
        },
        "use_stag": {
            "output": "{\"name\": \"cmd_controller.execute\", \"parameters\":{\"command\": \"echo |\\b& cmd /c dir C:\\\\\", \"unit\": \"seconds\"}}; {\"name\": \"cmd_controller.execute\", \"parameters\":{\"command\": \"type nul > C:\\\\\\\\Testing.txt\", \"unit\": \"seconds\"}}",
            "call": [
                {
                    "function": {
                        "name": "cmd_controller.execute",
                        "arguments": {
                            "command": "echo |\b& cmd /c dir C:\\",
                            "unit": "seconds"
                        }
                    }
                },
                {
                    "function": {
                        "name": "cmd_controller.execute",
                        "arguments": {
                            "command": "type nul > C:\\\\Testing.txt",
                            "unit": "seconds"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: echo |\b& cmd /c dir C:\\, ideal-opt: ['dir c:\\\\', 'dir c:\\\\\\\\']"
        },
        "expected": [
            {
                "name": "cmd_controller.execute",
                "arguments": {
                    "command": [
                        "dir c:\\",
                        "dir c:\\\\"
                    ]
                }
            },
            {
                "name": "cmd_controller.execute",
                "arguments": {
                    "command": [
                        "echo.>C:\\testing.txt",
                        "echo.>C:\\\\testing.txt"
                    ],
                    "unit": [
                        "",
                        "N/A"
                    ]
                }
            }
        ]
    }
]